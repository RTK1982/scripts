version: '3'

networks:
  npm-network:
    driver: bridge

services:
  appsec-npm:
    container_name: appsec-npm
    image: 'ghcr.io/openappsec/nginx-proxy-manager-attachment:latest'
    ipc: host
    restart: unless-stopped
    ports:
      - '80:80' # Public HTTP Port
      - '443:443' # Public HTTPS Port
      - '81:81' # Admin Web Port
    volumes:
      - ./npm/data:/data
      - ./npm/letsencrypt:/etc/letsencrypt
      - ./npm/appsec-logs:/ext/appsec-logs
      - ./npm/appsec-localconfig:/ext/appsec
    environment:
      - TZ=Europe/Zurich
    networks:
      - npm-network
      
  appsec-agent:
    container_name: appsec-agent
    image: 'ghcr.io/openappsec/agent:latest'
    ipc: host
    restart: unless-stopped
    environment:
      - user_email=deine@email.com
      - nginxproxymanager=true
      - autoPolicyLoad=true
      - TZ=Europe/Zurich
    volumes:
      - ./npm/appsec-config:/etc/cp/conf
      - ./npm/appsec-data:/etc/cp/data
      - ./npm/appsec-logs:/var/log/nano_agent
      - ./npm/appsec-localconfig:/ext/appsec
    command: /cp-nano-agent -standalone
    networks:
      - npm-network
      
  goaccess:
    container_name: goaccess
    image: 'xavierh/goaccess-for-nginxproxymanager:latest'
    restart: always
    ports:
      - '7880:7880'
    environment:
      - TZ=Europe/Zurich
      - SKIP_ARCHIVED_LOGS=False #optional
      - DEBUG=False #optional
      - BASIC_AUTH=False #optional
      - EXCLUDE_IPS=127.0.0.1 #optional - comma delimited
      - LOG_TYPE=NPM #optional - more information below
      - LANGUAGE=de
    volumes:
      - ./npm/data/logs:/opt/log
    networks:
      - npm-network

  # WebDAV Server 1
  # Kunde: 
  # DNS in Docker: http://webdav1:80
  webdav1:
    container_name: webdav1
    image: dgraziotin/nginx-webdav-nononsense:latest
    restart: unless-stopped
    environment:
      WEBDAV_USERNAME: "user1"
      WEBDAV_PASSWORD: "password1"
      PUID: "1000"
      PGID: "1000"
      TZ: "Europe/Zurich"
    volumes:
      - ./webdav1/html:/var/lib/nginx/html
      - ./webdav1/data:/data
    networks:
      - npm-network

 # WebDAV Server 2
  # Kunde: 
  # DNS in Docker: http://webdav2:80
  webdav1:
    container_name: webdav2
    image: dgraziotin/nginx-webdav-nononsense:latest
    restart: unless-stopped
    environment:
      WEBDAV_USERNAME: "user2"
      WEBDAV_PASSWORD: "password2"
      PUID: "1000"
      PGID: "1000"
      TZ: "Europe/Zurich"
    volumes:
      - ./webdav2/html:/var/lib/nginx/html
      - ./webdav2/data:/data
    networks:
      - npm-network

 # WebDAV Server 3
  # Kunde: 
  # DNS in Docker: http://webdav3:80
  webdav1:
    container_name: webdav3
    image: dgraziotin/nginx-webdav-nononsense:latest
    restart: unless-stopped
    environment:
      WEBDAV_USERNAME: "user3"
      WEBDAV_PASSWORD: "password3"
      PUID: "1000"
      PGID: "1000"
      TZ: "Europe/Zurich"
    volumes:
      - ./webdav3/html:/var/lib/nginx/html
      - ./webdav3/data:/data
    networks:
      - npm-network
